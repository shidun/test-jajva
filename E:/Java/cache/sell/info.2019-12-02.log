2019-12-02 10:34:55,260 - Starting TestJavaApplication on 192.168.0.139 with PID 15751 (/private/var/www/java/test-jajva/target/classes started by shidun in /private/var/www/java/test-jajva)
2019-12-02 10:34:55,261 - The following profiles are active: dev
2019-12-02 10:34:55,357 - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2019-12-02 10:34:56,098 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-12-02 10:34:56,098 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-12-02 10:34:56,182 - Finished Spring Data repository scanning in 74ms. Found 5 repository interfaces.
2019-12-02 10:34:56,197 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-12-02 10:34:56,199 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-12-02 10:34:56,217 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.OrderDetailRepository.
2019-12-02 10:34:56,217 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.OrderMasterRepository.
2019-12-02 10:34:56,218 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.ProductCategoryRepository.
2019-12-02 10:34:56,218 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.ProductInfoRepository.
2019-12-02 10:34:56,219 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.SellerInfoRepository.
2019-12-02 10:34:56,219 - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2019-12-02 10:34:56,536 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f3adbb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-12-02 10:34:56,910 - Tomcat initialized with port(s): 8080 (http)
2019-12-02 10:34:56,966 - Initializing ProtocolHandler ["http-nio-8080"]
2019-12-02 10:34:56,975 - Starting service [Tomcat]
2019-12-02 10:34:56,975 - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-12-02 10:34:57,072 - Initializing Spring embedded WebApplicationContext
2019-12-02 10:34:57,072 - Root WebApplicationContext: initialization completed in 1779 ms
2019-12-02 10:34:57,435 - HikariPool-1 - Starting...
2019-12-02 10:34:58,514 - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:328)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:112)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$6e119e28.CGLIB$jpaVendorAdapter$5(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$6e119e28$$FastClassBySpringCGLIB$$9d1f4e10.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$6e119e28.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1171)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:742)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:389)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:311)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1213)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1202)
	at com.imooc.testjava.TestJavaApplication.main(TestJavaApplication.java:14)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:81)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:319)
	... 62 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:157)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:115)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:78)
	... 63 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:152)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:955)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	... 76 common frames omitted
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65)
	... 79 common frames omitted
2019-12-02 10:34:58,522 - HikariPool-1 - Starting...
2019-12-02 10:34:59,570 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-12-02 10:34:59,658 - HHH000412: Hibernate Core {5.3.10.Final}
2019-12-02 10:34:59,659 - HHH000206: hibernate.properties not found
2019-12-02 10:34:59,808 - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-12-02 10:34:59,939 - HikariPool-1 - Starting...
2019-12-02 10:35:00,943 - HHH000342: Could not obtain connection to query metadata : Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-12-02 10:35:00,946 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
2019-12-02 10:35:00,979 - Stopping service [Tomcat]
2019-12-02 10:35:00,990 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-12-02 10:37:24,800 - Starting TestJavaApplication on 192.168.0.139 with PID 16500 (/private/var/www/java/test-jajva/target/classes started by shidun in /private/var/www/java/test-jajva)
2019-12-02 10:37:24,800 - The following profiles are active: dev
2019-12-02 10:37:24,835 - For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2019-12-02 10:37:25,367 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-12-02 10:37:25,367 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-12-02 10:37:25,445 - Finished Spring Data repository scanning in 71ms. Found 5 repository interfaces.
2019-12-02 10:37:25,457 - Multiple Spring Data modules found, entering strict repository configuration mode!
2019-12-02 10:37:25,458 - Bootstrapping Spring Data repositories in DEFAULT mode.
2019-12-02 10:37:25,473 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.OrderDetailRepository.
2019-12-02 10:37:25,474 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.OrderMasterRepository.
2019-12-02 10:37:25,474 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.ProductCategoryRepository.
2019-12-02 10:37:25,475 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.ProductInfoRepository.
2019-12-02 10:37:25,475 - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.imooc.testjava.repository.SellerInfoRepository.
2019-12-02 10:37:25,475 - Finished Spring Data repository scanning in 10ms. Found 0 repository interfaces.
2019-12-02 10:37:25,784 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3ec3db6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-12-02 10:37:26,035 - Tomcat initialized with port(s): 8080 (http)
2019-12-02 10:37:26,088 - Initializing ProtocolHandler ["http-nio-8080"]
2019-12-02 10:37:26,095 - Starting service [Tomcat]
2019-12-02 10:37:26,095 - Starting Servlet engine: [Apache Tomcat/9.0.21]
2019-12-02 10:37:26,174 - Initializing Spring embedded WebApplicationContext
2019-12-02 10:37:26,174 - Root WebApplicationContext: initialization completed in 1339 ms
2019-12-02 10:37:26,439 - HikariPool-1 - Starting...
2019-12-02 10:37:26,756 - HikariPool-1 - Start completed.
2019-12-02 10:37:26,803 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2019-12-02 10:37:26,846 - HHH000412: Hibernate Core {5.3.10.Final}
2019-12-02 10:37:26,847 - HHH000206: hibernate.properties not found
2019-12-02 10:37:26,939 - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2019-12-02 10:37:27,048 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2019-12-02 10:37:27,637 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2019-12-02 10:37:28,876 - Initializing ExecutorService 'applicationTaskExecutor'
2019-12-02 10:37:28,923 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2019-12-02 10:37:29,374 - Starting ProtocolHandler ["http-nio-8080"]
2019-12-02 10:37:29,409 - Tomcat started on port(s): 8080 (http) with context path '/sell'
2019-12-02 10:37:29,411 - Started TestJavaApplication in 4.918 seconds (JVM running for 5.308)
2019-12-02 10:40:09,465 - Shutting down ExecutorService 'applicationTaskExecutor'
2019-12-02 10:40:09,467 - Closing JPA EntityManagerFactory for persistence unit 'default'
2019-12-02 10:40:09,470 - HikariPool-1 - Shutdown initiated...
2019-12-02 10:40:09,474 - HikariPool-1 - Shutdown completed.
